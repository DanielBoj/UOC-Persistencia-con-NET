{"ast":null,"code":"import { BehaviorSubject, Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ReduxService = /*#__PURE__*/(() => {\n  class ReduxService {\n    constructor() {\n      // Generamos un observable para poder subscribirnos a él\n      this.localCache$ = new Observable();\n      // Decalramos un Behavior para que almacene los datos\n      this.localCache = new BehaviorSubject({\n        tipoUsuario: '',\n        idUsuario: ''\n      });\n      // El componente de login nos envía el id de usuario y su tipo\n      this.setCache = cache => this.localCache.next(cache);\n      // Enviamos el id de usuario y su tipo a cualquier otro componente\n      this.getCache = () => this.localCache$;\n      // Inicializamos el observable\n      this.localCache$ = this.localCache;\n    }\n  }\n  ReduxService.ɵfac = function ReduxService_Factory(t) {\n    return new (t || ReduxService)();\n  };\n  ReduxService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReduxService,\n    factory: ReduxService.ɵfac,\n    providedIn: 'root'\n  });\n  return ReduxService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
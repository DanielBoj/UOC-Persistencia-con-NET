{"ast":null,"code":"import _asyncToGenerator from \"C:/GenteFit/GenteFit/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/horarios.service\";\nimport * as i2 from \"src/app/services/clases.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/autocomplete\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/select\";\nfunction CreatehorarioComponent_mat_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵlistener(\"click\", function CreatehorarioComponent_mat_option_19_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const nombre_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSelect(nombre_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const nombre_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", nombre_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(nombre_r3);\n  }\n}\nfunction CreatehorarioComponent_mat_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dia_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    i0.ɵɵpropertyInterpolate(\"value\", i_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(dia_r6);\n  }\n}\nexport let CreatehorarioComponent = /*#__PURE__*/(() => {\n  class CreatehorarioComponent {\n    constructor(apiHorario, apiClase) {\n      var _this = this;\n      this.apiHorario = apiHorario;\n      this.apiClase = apiClase;\n      // Creamos los contenedores para trabajar con la clase\n      this.clases$ = new Subscription();\n      this.clases = [];\n      // Insertaremos los nombres de las clases para crear un array de opciones para encontrar la clase\n      this.nombresClases = [];\n      this.subscripts = [];\n      // Creamos los días para el select y el día seleccionado\n      this.dias = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\n      // Modelo de horario para el formulario\n      this.horarioModel = {\n        dia: 0,\n        hora: '',\n        clase: {\n          nombre: '',\n          descripcion: '',\n          profesor: '',\n          duracion: 0,\n          plazas: 0\n        }\n      };\n      // Valor de retorno para la función de creación\n      this.isCreated = false;\n      this.isError = false;\n      this.createHorario = /*#__PURE__*/_asyncToGenerator(function* () {\n        // Generamos el elemento a crear.\n        // Pasamos el dia de string a number => Como estamos trabajando con un select, el valor es un string\n        _this.horarioModel.dia = parseInt(_this.horarioModel.dia.toString());\n        const toSave = _this.horarioModel;\n        toSave.id = \"\";\n        // Obtenemos el id de la clase\n        let claseId = toSave.clase.id;\n        // Llamamos a la función de creación del servicio\n        // Hay que enviarle el id de la clase\n        try {\n          _this.apiHorario.createHorario(claseId, toSave);\n          _this.isCreated = true;\n        } catch (error) {\n          console.log(error);\n          _this.isError = true;\n        }\n      });\n      // Buscamos la clase por su nombre\n      this.onSearch = event => {\n        // Obtenemos el valor del input\n        let nombre = event.target.value;\n        // Filtramos el array de clases por el nombre y lo asignamos a clase\n        this.clases.filter(clase => clase.nombre.toLowerCase().match(nombre.toLowerCase())).map(clase => {\n          this.clase = clase;\n        });\n        // Asignamos la clase al modelo\n        if (this.clase) {\n          // Si la clase existe, la asignamos al modelo\n          this.horarioModel.clase = this.clase;\n        }\n      };\n      // Repetimos la lógica para una busqueda al seleccionar una opción de la lista\n      this.onSelect = nombre => {\n        // Filtramos el array de clases por el nombre y lo asignamos a clase\n        this.clases.filter(clase => clase.nombre.toLowerCase().match(nombre.toLowerCase())).map(clase => {\n          this.clase = clase;\n        });\n        // Asignamos la clase al modelo\n        if (this.clase) {\n          // Si la clase existe, la asignamos al modelo\n          this.horarioModel.clase = this.clase;\n        }\n      };\n      // Acción para la selección del día\n      this.onDiaSelect = dia => {\n        // Asignamos el día al modelo\n        this.horarioModel.dia = dia;\n      };\n      // Reseteamos el formulario\n      this.resetForm = () => {\n        this.horarioModel = {\n          dia: 0,\n          hora: '',\n          clase: {\n            nombre: '',\n            descripcion: '',\n            profesor: '',\n            duracion: 0,\n            plazas: 0\n          }\n        };\n      };\n      // Obtenemos todas las clases\n      this.subscripts.push(this.clases$ = this.apiClase.getClases().subscribe(clases => {\n        // Guardamos las clases obtenidas\n        this.clases = clases;\n        // Generamos un array con los nombres de las clases\n        this.nombresClases = this.clases.map(clase => clase.nombre);\n      }));\n    }\n  }\n  CreatehorarioComponent.ɵfac = function CreatehorarioComponent_Factory(t) {\n    return new (t || CreatehorarioComponent)(i0.ɵɵdirectiveInject(i1.HorariosService), i0.ɵɵdirectiveInject(i2.ClasesService));\n  };\n  CreatehorarioComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreatehorarioComponent,\n    selectors: [[\"app-createhorario\"]],\n    decls: 34,\n    vars: 5,\n    consts: [[\"mat-fab\", \"\", \"color\", \"primary\", \"routerLink\", \"/horarios\", 1, \"mat-button\"], [1, \"form-box\"], [1, \"horario-form\"], [\"color\", \"accent\", 1, \"search\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"clases\", \"name\", \"clase\", 3, \"matAutocomplete\", \"input\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"fill\"], [\"required\", \"\", 3, \"value\", \"valueChange\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"time\", \"name\", \"hora\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"routerLink\", \"/horarios\", 3, \"click\"], [3, \"value\", \"click\"], [3, \"value\"]],\n    template: function CreatehorarioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\")(1, \"button\", 0)(2, \"mat-icon\");\n        i0.ɵɵtext(3, \"arrow_back\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementContainerStart(4, 1);\n        i0.ɵɵelementStart(5, \"ng-form\", 2)(6, \"mat-card\")(7, \"mat-card-header\")(8, \"mat-card-title\")(9, \"h1\");\n        i0.ɵɵtext(10, \"Crear Horario\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"mat-card-content\")(12, \"div\")(13, \"mat-form-field\", 3)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"B\\u00FAsqueda de clases\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 4);\n        i0.ɵɵlistener(\"input\", function CreatehorarioComponent_Template_input_input_16_listener($event) {\n          return ctx.onSearch($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-autocomplete\", null, 5);\n        i0.ɵɵtemplate(19, CreatehorarioComponent_mat_option_19_Template, 2, 2, \"mat-option\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\")(21, \"mat-form-field\", 7)(22, \"mat-label\");\n        i0.ɵɵtext(23, \"D\\u00EDa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-select\", 8);\n        i0.ɵɵlistener(\"valueChange\", function CreatehorarioComponent_Template_mat_select_valueChange_24_listener($event) {\n          return ctx.selectedDia = $event;\n        })(\"selectionChange\", function CreatehorarioComponent_Template_mat_select_selectionChange_24_listener() {\n          return ctx.onDiaSelect(ctx.selectedDia);\n        });\n        i0.ɵɵtemplate(25, CreatehorarioComponent_mat_option_25_Template, 2, 2, \"mat-option\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\")(27, \"mat-form-field\", 7)(28, \"mat-label\");\n        i0.ɵɵtext(29, \"Hora\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function CreatehorarioComponent_Template_input_ngModelChange_30_listener($event) {\n          return ctx.horarioModel.hora = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(31, \"mat-card-actions\")(32, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function CreatehorarioComponent_Template_button_click_32_listener() {\n          return ctx.createHorario();\n        });\n        i0.ɵɵtext(33, \" Crear \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementContainerEnd();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(18);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"matAutocomplete\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.nombresClases);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"value\", ctx.selectedDia);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dias);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.horarioModel.hora);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.RequiredValidator, i5.NgModel, i5.NgForm, i6.MatFormField, i6.MatLabel, i7.MatButton, i7.MatFabButton, i8.MatCard, i8.MatCardActions, i8.MatCardContent, i8.MatCardHeader, i8.MatCardTitle, i9.MatIcon, i10.MatInput, i11.MatAutocomplete, i12.MatOption, i11.MatAutocompleteTrigger, i13.MatSelect],\n    styles: [\"body[_ngcontent-%COMP%]{background-color:#0000}\"]\n  });\n  return CreatehorarioComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/redux.service\";\nimport * as i3 from \"src/app/services/user.service\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"src/app/services/display.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"@angular/material/input\";\nconst _c0 = [\"loginForm\"];\nfunction HomeComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El email no es v\\u00E1lido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_mat_error_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El password no es v\\u00E1lido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    // El constructor se ejecuta antes que el ngOnInit, además, lo usamos para inyectar servicios\n    constructor(router, redux, api, snackBar, displayService) {\n      this.router = router;\n      this.redux = redux;\n      this.api = api;\n      this.snackBar = snackBar;\n      this.displayService = displayService;\n      // Información para la card\n      this.title = \"Gente Fit\";\n      this.subtitle = \"Identificate como un Gente Fit\";\n      this.description = \"Gente Fit es la plataforma de gestión de los centros de fitness Gente Fit. ¡Accede a tu nuevo gimnasio!\";\n      // Modelo form\n      this.log = {\n        email: '',\n        pass: ''\n      };\n      // Contenedor del usuario solicitado a la API\n      this.users$ = new Subscription();\n      this.users = [];\n      // Contenedor para manejar el cache\n      this.cache$ = new Subscription();\n      this.cache = {\n        tipoUsuario: '',\n        idUsuario: ''\n      };\n      this.subscripts = [];\n      // Flag para controlar si existe el usuario\n      this.userFound = false;\n      // Flag para controlar la barra de navegación\n      this.showHeader = false;\n      // Controles del formulario\n      this.loginForm = new NgForm([], []);\n      this.checkUser = () => {\n        // Comprobamos que exista un usuario con el email y la contraseñá introducidos\n        this.user = this.users.find(user => user.email === this.log.email && user.pass === this.log.pass);\n        // Comprobamos si el login es correcto y mostramos un aviso por pantalla con Snackbar\n        if (!this.user) {\n          this.snackBar.open('Usuario no encontrado, verifica las credenciales.', 'Cerrar', {\n            duration: 5000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: ['mat-snackbar-error']\n          });\n          // Salimos de la función\n          return;\n        }\n        // Cargamos el id y el tipo de usuario en el Redux\n        this.cache.idUsuario = this.user.id;\n        this.cache.tipoUsuario = this.user.tipo;\n        this.sendCache();\n        // Mostrar un aviso por pantalla con Snackbar y redireccionar al usuario\n        this.openValidSnackBar();\n      };\n      this.sendCache = () => this.redux.setCache(this.cache);\n      // Creamos un método para mostrar el snackbar de éxito\n      this.openValidSnackBar = () => {\n        // Creamos un modelo de referencia para nuestro snackbar\n        const snackBarRef = this.snackBar.open('Bienvenido a GentFit', 'Entrar', {\n          // Orientamos el modelo en la pantalla\n          horizontalPosition: 'center',\n          verticalPosition: 'top',\n          panelClass: ['mat-snackbar-success']\n        });\n        // Generamos las acciones del snackbar\n        snackBarRef.onAction().subscribe(() => {\n          // Redireccionamos al usuario\n          this.router.navigate(['/menu']);\n        });\n      };\n      // Seteamos el pass como oculto\n      this.hide = true;\n    }\n    ngOnInit() {\n      this.hide = true;\n      // Ocultamos la navegación\n      this.displayService.setShowHeader(false);\n      // Obtenemos los usuarios de la API\n      this.subscripts.push(this.users$ = this.api.getUsers().subscribe(users => {\n        // Cargamos los datos desde el observable recibido de la API\n        this.users = users;\n      }));\n    }\n    ngOnDestroy() {\n      // Nos desuscribimos de todos los observables\n      this.subscripts.forEach(sub => sub.unsubscribe());\n      // Volvemos a mostrar la navegación\n      this.displayService.setShowHeader(true);\n    }\n  }\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ReduxService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.MatSnackBar), i0.ɵɵdirectiveInject(i5.DisplayService));\n  };\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    viewQuery: function HomeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loginForm = _t.first);\n      }\n    },\n    decls: 40,\n    vars: 12,\n    consts: [[1, \"full-width\"], [\"loginForm\", \"ngForm\"], [\"id\", \"email\", \"type\", \"email\", \"matInput\", \"\", \"placeholder\", \"Email\", \"name\", \"email\", \"required\", \"\", \"pattern\", \"[-a-zA-Z0-9~!$%^&*_=+}{'?]+(\\\\.[-a-zA-Z0-9~!$%^&*_=+}{'?]+)*@([a-zA-Z0-9_][-a-zA-Z0-9_]*(\\\\.[-a-zA-Z0-9_]+)*\\\\.([cC][oO][mM]))(:[0-9]{1,5})?\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [\"matSuffix\", \"\"], [4, \"ngIf\"], [\"id\", \"password\", \"matInput\", \"\", \"placeholder\", \"Password\", \"name\", \"password\", \"required\", \"\", \"minLenght\", \"6\", \"ng-valid\", \"\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"type\", \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"mat-button\", \"\", 3, \"disabled\", \"click\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\")(1, \"h1\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h3\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"mat-card\", 0)(6, \"mat-card-header\")(7, \"mat-card-title\")(8, \"h1\");\n        i0.ɵɵtext(9, \"Acceso\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"mat-card-subtitle\")(11, \"h2\");\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"mat-card-content\");\n        i0.ɵɵelementContainerStart(14);\n        i0.ɵɵelementStart(15, \"ng-form\", null, 1)(17, \"div\")(18, \"mat-form-field\", 0)(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.log.email = $event;\n        })(\"keyup.enter\", function HomeComponent_Template_input_keyup_enter_21_listener() {\n          return ctx.checkUser();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-icon\", 3);\n        i0.ɵɵtext(23, \"email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-hint\");\n        i0.ɵɵtext(25, \"Introduce tu email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, HomeComponent_mat_error_26_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\")(28, \"mat-form-field\", 0)(29, \"mat-label\");\n        i0.ɵɵtext(30, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_31_listener($event) {\n          return ctx.log.pass = $event;\n        })(\"keyup.enter\", function HomeComponent_Template_input_keyup_enter_31_listener() {\n          return ctx.checkUser();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_32_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵelementStart(33, \"mat-icon\");\n        i0.ɵɵtext(34);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"mat-hint\");\n        i0.ɵɵtext(36, \"Introduce tu clave\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(37, HomeComponent_mat_error_37_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(38, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_38_listener() {\n          return ctx.checkUser();\n        });\n        i0.ɵɵtext(39, \" Enviar \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(16);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.description);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.subtitle);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.log.email);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", _r0.controls[\"email\"]);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\")(\"ngModel\", ctx.log.pass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", _r0.controls[\"password\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n      }\n    },\n    dependencies: [i6.NgIf, i7.DefaultValueAccessor, i7.NgControlStatus, i7.RequiredValidator, i7.PatternValidator, i7.NgModel, i7.NgForm, i8.MatFormField, i8.MatLabel, i8.MatHint, i8.MatError, i8.MatSuffix, i9.MatButton, i9.MatIconButton, i10.MatCard, i10.MatCardContent, i10.MatCardHeader, i10.MatCardSubtitle, i10.MatCardTitle, i11.MatIcon, i12.MatInput],\n    styles: [\"body[_ngcontent-%COMP%]{background-color:#0000}\"]\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}